{
    "rules": [
        {
            "condition": "len([pair for pair in transaction['offering']['currencyPairs'] if pair['payin']['kind'] == 'USD_LEDGER' and float(pair['payin']['amount']) > 30000]) > 0",
            "action": "risky",
            "message": "Payin amount from USD_LEDGER is too high"
        },
        {
            "condition": "len([pair for pair in transaction['offering']['currencyPairs'] if pair['estimatedSettlementTime'] > 10]) > 0",
            "action": "risky",
            "message": "Estimated settlement time is too long"
        },
        {
            "condition": "len([pair for pair in transaction['offering']['currencyPairs'] if not pair['payout']['paymentDetails'].get('reason')]) > 0",
            "action": "risky",
            "message": "Payout reason is missing or empty"
        },
        {
            "condition": "len([tx for tx in history[1:] if tx['quote']['data']['expiresAt'] > (datetime.now() - relativedelta(months=3)).isoformat()]) > 3",
            "action": "risky",
            "message": "More than 3 transactions in the past 3 months"
        },
        {
            "condition": "len([pair for pair in transaction['offering']['currencyPairs'] if float(pair['payin']['amount']) > 1000]) > 0 and (datetime.now() - isoparse(transaction['accountCreated'])).days < 30",
            "action": "risky",
            "message": "Transaction over 1000 and account is less than one month old"
        },
        {
            "condition": "if the stated reason for the transaction doesn't match up with the magnitude of purchase (common sense).",
            "action": "risky",
            "message": "mismatching explanation and amount"
        },
        {
            "condition": "If the transaction has withheld information and reason seems intentionally vague",
            "action": "risky",
            "message": "No valid explanation."
        },
        {
            "condition": "the transaction pattern deviates significantly from the customer's usual behavior.",
            "action": "risky",
            "message": "Customer Behavioral change"
        },
        {
            "condition": "they are buying a car and len([tx for tx in history[1:] if tx['quote']['data']['expiresAt'] > (datetime.now() - relativedelta(months=3)).isoformat()]) > 2",
            "action": "risky",
            "message": "Purchase of car and more than 2 transactions in the past 2 months"
        }                


    ]
}
